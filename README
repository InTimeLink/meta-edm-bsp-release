Technexion 4.1.15-1.1.1 Yocto Project BSP
================================================

This BSP is a Technexion release providing support NXP i.mx series processors


Quick Start Guide
-----------------
See the Freescale Yocto Project User's Guide for instructions on installing repo.

First install the Technexion BSP repo
$: repo init -u https://github.com/TechNexion/edm-yocto-bsp.git -b jethro_4.1.15-1.1.0_GA

Download the Yocto Freescale Layers:
$: repo sync -j8

Run i.MX Freescale Yocto Project Setup:
$: MACHINE=< machine name> source edm-setup-release.sh -b <build directory> -e <backend fb, wayland, x11>

After this your system will be configured to start a Yocto Project build.

Build images
---------------------
Each graphical backend X11, Frame buffer and Wayland must be in a separate build 
directory, so the setup script above must be run for each backend to configure the build 
correctly. In this release two image recipes are provided that work on almost all backends.

DISTROs are new and the way to configure for any backends.  Use DISTRO= instead of the -e on the setup script.
The -e parameter gets converted to the appropriate distro configuration.

Note: DirectFB is no longer supported in i.MX graphic bilds.

   fsl-image-gui provides a gui image without QT.
   fsl-image-qt5 provides a Qt5 image

Here are some examples:

Building X11
------------
  DISTRO=fsl-imx-x11 MACHINE=edm1-cf-imx6 source edm-setup-release.sh -b build-x11
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> -platform xcb -plugin evdevtouch:/dev/input/event0

Building Frame Buffer (FB)
---------------------------
  DISTRO=fsl-imx-fb MACHINE=edm1-cf-imx6 source edm-setup-release.sh -b build-fb
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 Example> -platform eglfs -plugin evdevtouch:/dev/input/event0

Building XWayland
---------------------------
  DISTRO=fsl-imx-xwayland MACHINE=edm1-cf-imx6 source edm-setup-release.sh -b build-xwayland
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> platform wayland-egl -plugin evdevtouch:/dev/input/event0 --fullscreen

Building Wayland-Weston (wayland)
---------------------------
  DISTRO=fsl-imx-wayland MACHINE=edm1-cf-imx6 source edm-setup-release.sh -b build-wayland
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> platform wayland-egl -plugin evdevtouch:/dev/input/event0 --fullscreen

Hardware Floating Point
-----------------------
This release enables hardware floating point by default.  This feature is enabled in both the machine 
configurations and in the layer.conf. (Some machine files exist in the community meta-fsl-arm without this setting.)
DEFAULTTUNE_mx6 = "cortexa9hf-neon

Software floating point is not supported starting with the 4.1.15_1.0.0_ga release

Restricted Codecs
-----------------
These codecs have contractual restrictions that require separate distribution.

The Manufacturing Tool - MFGTool
--------------------------------
In this release MFGTool uses the community setup.  
To build MFGTool, build the following:

   bitbake fsl-image-mfgtool-initramfs

End User License Agreement
--------------------------
During the Freescale Yocto Community BSP setup-environment process, the Freescale i.MX End User License Agreement (EULA) 
is displayed. To continue, users must agree to the conditions of this license. The agreement to the terms allows the 
Yocto build to untar packages from the Freescale mirror. Please read this license agreement carefully during the 
setup process because, once accepted, all further work in the Yocto environment is tied to this accepted agreement.

Chromium
---------
The Chromium browser requires additional layers added in the fsl-release-setup.sh script.   
To enable chromium requires the following steps:

In local.conf 
- Add chromium into your install list:
CORE_IMAGE_EXTRA_INSTALL += "chromium libexif"

- Add commercial into the white list:
LICENSE_FLAGS_WHITELIST="commercial"

QTWebkit
--------
To start go to /usr/share/qt5/examples/webkitwidgets/browser and run browser

Qt
--
Note that Qt has both a commercial and open source license options.  Make the decision about which license
to use before starting work on custom Qt applications.  Once custom Qt applications are started with an open source
Qt license the work can not be used with a commercial Qt license.  Work with a legal representative to understand
the differences between each license.   Default builds use an open source Qt license.

Note Qt is not supported on i.MX 6UltraLite and i.MX 7Dual. It works on X11 backend only but is not a supported feature.
